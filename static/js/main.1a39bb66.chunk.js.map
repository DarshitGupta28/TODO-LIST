{"version":3,"sources":["components/Form.js","components/Todo.js","components/todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","Todolist","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a39bb66.chunk.js","sourcesContent":["import React from 'react'\r\nimport App from '../App';\r\n\r\n\r\nconst Form =({setInputText,todos,setTodos,inputText,setStatus})=>{\r\n    const inputTextHandler =(e)=>{\r\n        //console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n\r\n    };\r\n    const submitTodoHandler =(e)=>{\r\n        e.preventDefault();\r\n        setTodos([...todos,{text:inputText,completed:false,id:Math.random()*1000}])\r\n        setInputText(\"\");\r\n    }\r\n    const statusHandler=(e)=>{\r\n        setStatus(e.target.value);\r\n    }\r\n    return (\r\n        <form>\r\n            <input onChange={inputTextHandler} type=\"text\" className =\"todo-input\" value={inputText}/>\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type =\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler}  name=\"todos\" className=\"filter-todo\">\r\n                    <option value =\"all\"> All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nexport default Form;","import React from \"react\";\r\nconst Todo =({text,todo,todos,setTodos})=>{\r\n    const deleteHandler=()=>{\r\n        setTodos(todos.filter(el=>el.id!==todo.id));\r\n    }\r\n    const completeHandler=()=>{\r\n        setTodos(todos.map((item)=>{\r\n            if(item.id===todo.id)\r\n            {\r\n                return{\r\n                    ...item,completed:!item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    };\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\":\"\"}`}>\r\n            {text}\r\n            </li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n             <i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n            <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Todo;","import React from 'react';\r\nimport Todo from \"./Todo\"\r\nconst Todolist =({todos,setTodos,filteredTodos})=>{\r\n    return (\r\n        <div className =\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n        {filteredTodos.map(todo=>(\r\n            <Todo todo={todo} setTodos={setTodos} todos={todos} key={todo.id} text={todo.text} id={todo.id}/>\r\n        ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default Todolist;\r\n","import React,{ useState ,useEffect} from 'react'\nimport './App.css';\nimport Form from \"./components/Form\"\nimport Todolist from \"./components/todolist\"\n\nfunction App() {\n  const [inputText,setInputText] =useState(\"\");\n  const [todos,setTodos]=useState([]);\n  const [status,setStatus]=useState(\"all\");\n  const [filteredTodos,setFilteredTodos]=useState([]);\n\n  useEffect(()=>{\n    filterHandler();\n  },[todos,status]);\n\n  const filterHandler=()=>{\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo=>todo.completed===true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo=>todo.completed===false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n  return (\n    <div className=\"App\">\n    <header>\n      <h1> TO DO LIST</h1>\n      </header>\n      <Form \n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        \n         />\n      <br/>\n      <Todolist filteredTodos={filteredTodos} todos={todos} setTodos={setTodos}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}